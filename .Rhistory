install.packages("tidyverse")
setwd("C:/Users/zvjan/OneDrive/Desktop/R_Analysis")
setwd("C:/Users/zvjan/OneDrive/Desktop/R_Analysis")
setwd("C:/Users/zvjan/OneDrive/Desktop/R_Analysis")
setwd("C:/Users/zvjan/OneDrive/Desktop/R_Analysis/01_Demo")
x<-3
x<-5
numlist <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
read.csv()
?read.csv
NOTE
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
View(demo_table)
View(demo_table)
library(jsonlite)
library(jsonlite)
library(jsonlite)
library(jsonlite)
?fromJSON()
demo_table2 <- fromJSON(txt='demo.json')
View(demo_table2)
demo_table[3,3]
demo_table$"Vehicle_Class"[2]
filter_table <- demo_table2[demo_table2$price > 10000,]
?subset()
filter_table2 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status) #filter by price and drivetrain
View(filter_table2)
?sample()
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
num_rows <- 1:nrow(demo_table)
demo_table[sample(1:nrow(demo_table), 3),]
num_rows <- 1:nrow(demo_table)
sample_rows <- sample(num_rows, 3)
demo_table[sample_rows,]
demo_table[sample(1:nrow(demo_table), 3),]
> ?mutate()
?mutate()
library(tidyverse)
?mutate()
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
View(demo_table)
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), .groups = 'keep') #create summary table
View(summarize_demo)
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer),Maximum_Price=max(price),Num_Vehicles=n(), .groups = 'keep') #create summary table with multiple columns
View(summarize_demo)
?gather()
demo_table3 <- read.csv('demo2.csv',check.names = F,stringsAsFactors = F)
View(demo_table3)
long_table <- gather(demo_table3,key="Metric",value="Score",buying_price:popularity)
View(long_table)
?spread()
wide_table <- long_table %>% spread(key="Metric",value="Score")
View(wide_table)
all.equal()
wide_table <- long_table %>% spread(key="Metric",value="Score")all.equal()
wide_table <- long_table %>% spread(key="Metric",value="Score").all.equal()
?ggplot()
plt + geom_bar() #plot a bar plot
plt <- ggplot(mpg,aes(x=class)) #import dataset into ggplot2
plt + geom_bar() #plot a bar plot
?geom_bar()
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=manufacturer,y=Vehicle_Count)) #import dataset into ggplot2
plt + geom_col() #plot a bar plot
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") #plot bar plot with labels
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") + #plot bar plot with labelstheme(axis.text.x=element_text(angle=45,hjust=1)) #rotate the x-axis label 45 degrees
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") + theme(axis.text.x=element_text(angle=45,hjust=1)) #rotate the x-axis label 45 degrees
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") + theme(axis.text.x=element_text(angle=45,hjust=1)) #rotate the x-axis label 45 degrees
mpg_summary <- subset(mpg,manufacturer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=cyl,y=Mean_Hwy)) #import dataset into ggplot2
mpg_summary <- subset(mpg,manufacturer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=cyl,y=Mean_Hwy)) #import dataset into ggplot2
View(mpg_summary)
plt + geom_line()
plt + geom_line() + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks = c(16:30)) #add line plot with labels
plt <- ggplot(mpg,aes(x=displ,y=cty)) #import dataset into ggplot2
plt <- ggplot(mpg,aes(x=displ,y=cty)) #import dataset into ggplot2
plt + geom_point() + xlab("Engine Size (L)") + ylab("City Fuel-Efficiency (MPG)") #add scatter plot with labels
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class)) #import dataset into ggplot2
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class") #add scatter plot with labels
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class,shape=drv)) #import dataset into ggplot2
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class",shape="Type of Drive") #add scatter plot with multiple aesthetics
plt <- ggplot(mpg,aes(y=hwy)) #import dataset into ggplot2
plt + geom_boxplot() #add boxplot
plt <- ggplot(mpg,aes(y=hwy)) #import dataset into ggplot2
plt + geom_boxplot() #add boxplot
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy)) #import dataset into ggplot2
> plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot and rotate x-axis labels 45 degrees
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy)) #import dataset into ggplot2
> plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot and rotate x-axis labels 45 degrees
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy)) #import dataset into ggplot2
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot and rotate x-axis labels 45 degrees
mpg_summary <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary, aes(x=class,y=factor(year),fill=Mean_Hwy))
plt + geom_tile() + labs(x="Vehicle Class",y="Vehicle Year",fill="Mean Highway (MPG)") #create heatmap with labels
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary, aes(x=model,y=factor(year),fill=Mean_Hwy)) #import dataset into ggplot2
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + #add heatmap with labels > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary, aes(x=model,y=factor(year),fill=Mean_Hwy)) #import dataset into ggplot2
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + #add heatmap with labels > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy)) #import dataset into ggplot2
plt + geom_boxplot() + #add boxplot
theme(axis.text.x=element_text(angle=45,hjust=1)) + #rotate x-axis labels 45 degrees
geom_point() #overlay scatter plot on top
> mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), .groups = 'keep') #create summary table
> mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), .groups = 'keep') #create summary table
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine)) #import dataset into ggplot2
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") #add scatter plot
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ),SD_Engine=sd(displ), .groups = 'keep')
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine)) #import dataset into ggplot2
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") + #add scatter plot with labels
geom_errorbar(aes(ymin=Mean_Engine-SD_Engine,ymax=Mean_Engine+SD_Engine)) #overlay with error bars
mpg_long <- mpg %>% gather(key="MPG_Type",value="Rating",c(cty,hwy)) #convert to long format
head(mpg_long)
plt ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)) #import dataset into ggplot2
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)) #import dataset into ggplot2
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot with labels rotated 45 degrees
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)) #import dataset into ggplot2
plt + geom_boxplot() + facet_wrap(vars(MPG_Type)) + #create multiple boxplots, one for each MPG type
theme(axis.text.x=element_text(angle=45,hjust=1),legend.position = "none") + xlab("Manufacturer") #rotate x-axis labels
ggplot(mtcars,aes(x=wt)) + geom_density() #visualize distribution using density plot
shapiro.test(mtcars$wt)
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
plt <- ggplot(population_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plot
sample_table <- population_table %>% sample_n(50) #randomly sample 50 data points
plt <- ggplot(sample_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plot
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven))) #compare sample versus population means
sample_table <- population_table %>% sample_n(50) #generate 50 randomly sampled data points
t.test(log10(sample_table$Miles_Driven),log10(sample_table2$Miles_Driven)) #compare means of two samples
mpg_data <- read.csv('mpg_modified.csv') #import dataset
mpg_1999 <- mpg_data %>% filter(year==1999) #select only data points where the year is 1999
mpg_2008 <- mpg_data %>% filter(year==2008) #select only data points where the year is 2008
t.test(mpg_1999$hwy,mpg_2008$hwy,paired = T) #compare the mean difference between two samples
mtcars_filt <- mtcars[,c("hp","cyl")] #filter columns from mtcars dataset
mtcars_filt$cyl <- factor(mtcars_filt$cyl) #convert numeric column to factor
aov(hp ~ cyl,data=mtcars_filt) #compare means across multiple levels
summary(aov(hp ~ cyl,data=mtcars_filt))
setwd("C:/Users/zvjan/OneDrive/Desktop/Module 16")
setwd("C:/Users/zvjan/OneDrive/Desktop/Module 16")
file.rename (MechaCarChallenge.RScript)function()
file.rename (MechaCarChallenge.RScript)function()
file.rename (MechaCarChallenge.RScript)function
file.rename (MechaCarChallenge.RScript)
file.rename (MechaCarChallenge.RScript)
file.rename(MechaCarChallenge.RScript)
library(dplyr)
new_table <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
View(new_table)
ggplot (new_table, aes (mpg, vehicle_weight))+
geom_point ()+
geom_smooth (method="lm", se=TRUE)
ggplot (new_table, aes (mpg, vehicle_weight))+
geom_point ()+
geom_smooth (method="lm", )
ggplot (new_table, aes (mpg, new_table))+
geom_point ()+
geom_smooth (method="lm", se=TRUE)
ggplot (new_table, aes (mpg))+
geom_point ()+
geom_smooth (method="lm", se=TRUE)
ggplot (new_table, aes (mpg, vehicle_weight))+
geom_point ()+
geom_smooth (method="lm", se=TRUE)
ggplot (new_table, aes (vehicle_weight, mpg))+
geom_point ()+
geom_smooth (method="lm", se=TRUE)
reg <- lm(mpg ~ vehicle_weight + vehicle_length, data = new_data)
reg <- lm(mpg ~ vehicle_weight + vehicle_length, data = new_table)
summery (reg)
reg <- lm(mpg ~ vehicle_weight + vehicle_length, data = new_table)
summary (reg)
reg <- lm(mpg ~ vehicle_weight + vehicle_length + spoiler_angle, data = new_table)
summary (reg)
ggplot (new_table, aes (vehicle_weight+ spoiler_angle, mpg))+
geom_point ()+
geom_smooth (method="lm", se=TRUE)
ggplot (new_table, aes (vehicle_weight+ spoiler_angle+vehicle_length, mpg))+
geom_point ()+
geom_smooth (method="lm", se=TRUE)
ggplot (new_table, aes (vehicle_weight+spoiler_angle+vehicle_length+ground_clearance+AWD, mpg))+
geom_point ()+
geom_smooth (method="lm", se=TRUE)
reg <- lm(mpg ~ y, data = new_table)
reg <- lm(mpg ~ vehicle_weight+spoiler_angle+vehicle_length+ground_clearance+AWD, data = new_table)
summary (reg)
reg <- lm(mpg ~ vehicle_weight+spoiler_angle+vehicle_length+ground_clearance+AWD, data = new_table)
summary (reg)
coil_table <- read.csv(file='Suspension_Coil.csv',check.names=F,stringsAsFactors = F)
View(coil_table)
coil_table.summarize()
summarize(coil_table)
View(coil_table)
View(coil_table)
View(coil_table)
summarize(coil_table, PSI)
? summarize()
total_summery <- read.csv(file='Suspension_Coil.csv',check.names=F,stringsAsFactors = F)
View(total_summery)
Summarize (total_summery)
summarize (total_summery)
View(total_summery)
PSI_DF <- subset (total_summery, PSI)
a <- c(PSI)
a <- c("PSI")
mean(a)
summarize (total_summery, PSI)
summarize (total_summery, groups=PSI)
coil_table <- read.csv(file='Suspension_Coil.csv',check.names=F,stringsAsFactors = F)
total_summery.summarize (coil_table, groups=PSI)
total_summery=summarize (coil_table, groups=PSI)
mean (coil_table$PSI)
total_summery=(mean (coil_table$PSI))
total_summery=summarize(mean (coil_table$PSI)+ median(coil_table$PSI)
total_summery=summarize(mean (coil_table$PSI)+ median(coil_table$PSI))
PSI.head()
View(coil_table)
total_summery = df.coil.table
total_summery = coil.table
total_summery <- coil.table (PSI)
total_summery <- data.frame.coil.table (PSI)
data.frame (coil_table)
data.frame (coil_table, "PSI")
? data.frame
data.frame (total_summery)
total_summery <- data.frame (coil_table)
total_summery <- data.frame (coil_table, "PSI")
total_summery <- data.frame ('PSI')
total_summery <- data.frame (coil_table)
?group_by
summarize (total_summery)
View(total_summery)
group_by (PSI)
summarise(total_summery)
View(total_summery)
summarize_demo <- coil_table %>% group_by(PSI) %>% summarize(Mean=mean(PSI),Median=median (PSI),.groups = 'keep')
View(summarize_demo)
total_summery <- data.frame (coil_table)
summarize_demo <- total_summery %>% group_by(PSI) %>% summarize(Mean=mean(PSI),Median=median (PSI),.groups = 'keep')
total_summery <- data.frame (coil_table)
summarize_demo <- total_summery %>% group_by(PSI) %>% summarize(Mean=mean(PSI),Median=median (PSI),.groups = 'keep')
total_summery <- data.frame (coil_table)
summarize_demo <- total_summery %>% group_by(PSI) %>% summarize(Mean=mean(PSI),Median=median (PSI),.groups = 'keep')
summarize_demo <- total_summery %>%
group_by(PSI) %>%
summarize(Mean=mean(PSI),Median=median(PSI),Variance=variance(PSI), SD= sd(PSI),.groups = 'keep')
summarize_demo <- total_summery %>%
group_by(PSI) %>%
summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI), SD= sd(PSI),.groups = 'keep')
summarize(total_summery, mean(PSI))
summarize_demo <- total_summery %>%
summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI), SD= sd(PSI),.groups = 'keep')
summarize_demo <- total_summery %>%
summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI), SD= sd(PSI),)
coil_table <- read.csv(file='Suspension_Coil.csv',check.names=F,stringsAsFactors = F)
summarize_demo <- total_summery %>%
summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI), SD= sd(PSI),)
lot_summery <- total_summery %>% group_by(Manufacturing_Lot)
summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI), SD= sd(PSI),)
View(lot_summery)
lot_summery <- total_summery %>% group_by(Manufacturing_Lot) %>%
summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI), SD= sd(PSI),)
total_summery <- coil_table %>%
summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI), SD= sd(PSI),)
View(summarize_demo)
View(lot_summery)
View(lot_summery)
t.test(Lot_summary$mean_PSI, mu = 1500, subset = suspension$Manufacturing_Lot == "Lot1")
t.test(lot_summary$mean_PSI, mu = 1500, subset = suspension$Manufacturing_Lot == "Lot1")
t.test(total_summary$mean_PSI, mu = 1500, subset = suspension$Manufacturing_Lot == "Lot1")
t.test(coil_table$mean_PSI, mu = 1500, subset = suspension$Manufacturing_Lot == "Lot1")
t.test(lot_summery, mu = 1500)
t.test(coil_table, mu = 1500)
t.test((lot_summery), mu = 1500) #, subset = suspension$Manufacturing_Lot == "Lot1")
? t.test
t.test((total_summery), mu = 1500)
t.test((total_summery),subset = (total_summery)$Manufacturing_Lot == "Lot1")
t.test((lot_summery),subset = (lot_summery)$Manufacturing_Lot == "Lot1")
t.test((total_summery),subset = (total_summery)$Manufacturing_Lot == "Lot1")
t.test((total_summery), mu=1500,subset = (total_summery)$Manufacturing_Lot == "Lot1")
t.test(coil_table$PSI, mu = 1500)
t.test(subset(coil_table_Lot=="Lot1")$PSI,mu = 1500)
t.test(subset(coil_table=="Lot1")$PSI,mu = 1500)
t.test(subset(coil_table == "Lot1")$PSI,mu = 1500)
t.test(subset(coil_table=="Lot1")$PSI,mu = 1500)
t.test(subset(coil_table_Lot=="Lot1")$PSI,mu = 1500)
t.test(subset(coil_table, Manufacturing_Lot=="Lot1")$PSI,mu = 1500)
t.test(subset(coil_table, Manufacturing_Lot=="Lot1")$PSI,mu = 1500)
t.test(subset(coil_table, Manufacturing_Lot=="Lot1")$PSI,mu = 1500)
t.test(subset(coil_table, Manufacturing_Lot=="Lot2")$PSI,mu = 1500)
t.test(subset(coil_table, Manufacturing_Lot=="Lot3")$PSI,mu = 1500)
t.test(coil_table$PSI, mu = 1500)
t.test(subset(coil_table, Manufacturing_Lot=="Lot1")$PSI,mu = 1500)
t.test(subset(coil_table, Manufacturing_Lot=="Lot2")$PSI,mu = 1500)
t.test(subset(coil_table, Manufacturing_Lot=="Lot3")$PSI,mu = 1500)
